apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers: 
      - name: backend
        image: $CONTAINER_REGISTRY_LOGIN_SERVER/backend:$VERSION
        imagePullPolicy: IfNotPresent
        env:
        - name: PORT
          value: "6400"
        - name: DB_USERNAME
          value: $DB_USERNAME
        - name: DB_PASSWORD
          value: $DB_PASSWORD
        - name: SESSION_SECRET
          value: $SESSION_SECRET
        resources:
          requests:
            cpu: 128m
            memory: 128Mi
          limits:
            cpu: 256m
            memory: 256Mi
---
apiVersion: v1
kind: Service
metadata:
  name: backend
  annotations:
    service.beta.kubernetes.io/azure-load-balancer-internal: "true"
spec:
  selector:
    app: backend
  type: LoadBalancer
  ports:
    - protocol: TCP
      port: 80
      targetPort: 6400
  
#ingress with no public ip and terminates tls for backend
#apiVersion: approuting.kubernetes.azure.com/v1alpha1
#kind: NginxIngressController
#metadata:
#  name: backend-ingress
#spec:
#  ingressClassName: nginx-internal
#  controllerNamePrefix: nginx-internal
#  loadBalancerAnnotations: 
#    service.beta.kubernetes.io/azure-load-balancer-internal: "true"
#  tls:
#  - hosts:
#    - backend-ingress.internal
#    secretName: backend-tls
#  rules:
#    - http:
#        paths:
#          - pathType: Prefix
#            path: "/"
#            backend:
#              service:
#                name: backend
#                port:
#                  number: 80     
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: backend-ingress
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - backend-ingress.internal
    secretName: backend-tls
  rules:
  - http:
      paths:
        - pathType: Prefix
          path: "/"
          backend:
            service:
              name: backend
              port:
                number: 80
---
#This service will later be moved to the frontend and will act as the exposed public ip      
apiVersion: v1
kind: Service
metadata:
  name: public-ip
spec:
  selector:
    app: backend-ingress
  type: LoadBalancer
  ports:
    - protocol: TCP
      port: 443
      targetPort: 443